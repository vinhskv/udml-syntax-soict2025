package UDML.dcsl.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int AnnotationDcsl = 0;
  public static final int Associate = 1;
  public static final int ConcernDCSL = 2;
  public static final int DAssoc = 3;
  public static final int DAttr = 4;
  public static final int DClass = 5;
  public static final int DOpt = 6;
  public static final int DomainModelDcsl = 7;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xa7f6d256248949efL, 0xa2047e72e8fb22eeL);
    builder.put(0x7dde76cdf82f1ba8L, AnnotationDcsl);
    builder.put(0x1802c6e79a1a321cL, Associate);
    builder.put(0x7dde76cdf82cea89L, ConcernDCSL);
    builder.put(0x1802c6e79a18b4cfL, DAssoc);
    builder.put(0x7dde76cdf82c4f33L, DAttr);
    builder.put(0x7dde76cdf82c4f43L, DClass);
    builder.put(0x7dde76cdf82c4f49L, DOpt);
    builder.put(0x7dde76cdf82f1baeL, DomainModelDcsl);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
