package UDML.core.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Aggregation = 0;
  public static final int Annotable = 1;
  public static final int Annotation = 2;
  public static final int Association = 3;
  public static final int Class = 4;
  public static final int Classifier = 5;
  public static final int Composition = 6;
  public static final int Concern = 7;
  public static final int DataType = 8;
  public static final int DomainModel = 9;
  public static final int Enumeration = 10;
  public static final int Generalization = 11;
  public static final int MemberEnd = 12;
  public static final int Operation = 13;
  public static final int Package = 14;
  public static final int Parameter = 15;
  public static final int PrimitiveType = 16;
  public static final int Property = 17;
  public static final int RefAnnotation = 18;
  public static final int RelationShip = 19;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xfd381d931dce4228L, 0xba53a4e0ecaf0da2L);
    builder.put(0x7dde76cdf827246aL, Aggregation);
    builder.put(0x49e02d1c64bbe822L, Annotable);
    builder.put(0x49e02d1c64bbe825L, Annotation);
    builder.put(0x49e02d1c64bbef9dL, Association);
    builder.put(0x49e02d1c64bbef7fL, Class);
    builder.put(0x49e02d1c64bbe834L, Classifier);
    builder.put(0x7dde76cdf80bb07aL, Composition);
    builder.put(0x49e02d1c64bbe82cL, Concern);
    builder.put(0x49e02d1c64bbefa4L, DataType);
    builder.put(0x49e02d1c64bbe830L, DomainModel);
    builder.put(0x49e02d1c64bbefa7L, Enumeration);
    builder.put(0x49e02d1c64bbef75L, Generalization);
    builder.put(0x3a10628a5a4433cdL, MemberEnd);
    builder.put(0x49e02d1c64bbef87L, Operation);
    builder.put(0x49e02d1c64bbef7aL, Package);
    builder.put(0x49e02d1c64bbef94L, Parameter);
    builder.put(0x49e02d1c64bbefa8L, PrimitiveType);
    builder.put(0x49e02d1c64bbef86L, Property);
    builder.put(0x1802c6e79a24c14fL, RefAnnotation);
    builder.put(0x7dde76cdf7e6f65bL, RelationShip);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
